// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package inject

import (
	"github.com/linhoi/mq/iface/grpc"
	"github.com/linhoi/mq/internal/config"
	"github.com/linhoi/mq/rocketmq"
)

// Injectors from wire.go:

func InitApp(env config.Env) (*App, func(), error) {
	configConfig := config.New(env)
	zapLogger, cleanup, err := logger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	opentracingTracer, cleanup2 := tracer(configConfig)
	producer, cleanup3, err := rocketmq.NewProducer(configConfig)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	api := grpc.NewAPI(producer)
	server := grpc.NewServer(configConfig, api)
	app := NewApp(configConfig, zapLogger, opentracingTracer, server)
	return app, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
